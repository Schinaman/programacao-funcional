package application;
import java.util.ArrayList;
import java.util.List;

import entities.Product;
public class ProductPredicate {


	public static void productPredicate1() {
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.removeIf(p -> p.getPrice() >= 100.0); //"removeIf" é um exemplo de predicado
		
		for(Product p : list) {
			System.out.println(p);
		}
	}
	
	public static void productPredicate2() {
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.removeIf(new util.ProductPredicate()); //implementação passo a passo do productPredicate1;
		
		for(Product p : list) {
			System.out.println(p);
		}
	}
	
//Referencia através de método statico
//Método dentro da Classe Product	
	//public static boolean staticProductPredicate(Product p) { //também aceita referencia para metodo statico
	//	return p.getPrice()>=100.0;
	//}
	
	public static void productPredicate3() {
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.removeIf(Product.staticProductPredicate(list)); //implementação passo a passo do productPredicate1;
		
		for(Product p : list) {
			System.out.println(p);
		}
}
	
		
