package application;

import java.util.ArrayList;
import java.util.List;

import entities.Product;

public class ProductConsumer {

	public static void productConsumer1() {
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.forEach(p -> p.setPrice(p.getPrice()*1.1)); //Arguemnto do forEach é um Consumer;
		
		for(Product p : list) {
			System.out.println(p);
		}
	}
	
	public static void productConsumer2() { //
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.forEach(new util.ProductConsumer());
		list.forEach(System.out :: println); //reference method
	}
	
	//Reference method - método estatico
	public static void productConsumer3() {
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.forEach(Product :: staticConsumerPriceUpdate ); //Argumento forEach é um predicado;
		list.forEach(System.out :: println);
	
	}
	
	//Reference method - método não estatico
	public static void productConsumer4() {
		List<Product> list = new ArrayList<>();
		
		list.add(new Product("TV", 900.0));
		list.add(new Product("Mouse", 50.0));
		list.add(new Product("Tablet", 350.50));
		list.add(new Product("HD Case", 80.90));
		
		list.forEach(p -> p.setPrice(p.getPrice()*1.1)); //Arguemnto forEach é um predicado;
		
		for(Product p : list) {
			System.out.println(p);
		}
	}
}
